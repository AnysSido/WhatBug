// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WhatBug.Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(WhatBugDbContext))]
    [Migration("20210817145223_MakeIssueIdStringPart1")]
    partial class MakeIssueIdStringPart1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PriorityPriorityScheme", b =>
                {
                    b.Property<int>("PrioritiesId")
                        .HasColumnType("int");

                    b.Property<int>("PrioritySchemesId")
                        .HasColumnType("int");

                    b.HasKey("PrioritiesId", "PrioritySchemesId");

                    b.HasIndex("PrioritySchemesId");

                    b.ToTable("PriorityPriorityScheme");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "White"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Chiffon"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Frost"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Tan"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Buttermilk"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Beige"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Oat"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Cookie"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Latte"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Lemon"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Yellow"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Honey"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Gold"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Apricot"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Orange"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Blush"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Red"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Rose"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Candy"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Cherry"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Pink"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Fushcia"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Hotpink"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Magenta"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Lilac"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Iris"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Amethyst"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Purple"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Violet"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Sky"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Sapphire"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Cerulean"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Blue"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Cobalt"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Navy"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Mint"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Seafoam"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Lime"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Olive"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Pear"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Pickle"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Green"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Shamrock"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Emerald"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Basil"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Tortilla"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Peanut"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Tawny"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Caramel"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Coffee"
                        },
                        new
                        {
                            Id = 52,
                            Name = "Mocha"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Hickory"
                        },
                        new
                        {
                            Id = 54,
                            Name = "Brown"
                        },
                        new
                        {
                            Id = 55,
                            Name = "Cloud"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Silver"
                        },
                        new
                        {
                            Id = 57,
                            Name = "Coin"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Ash"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Gray"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Pewter"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Smoke"
                        },
                        new
                        {
                            Id = 62,
                            Name = "Slate"
                        },
                        new
                        {
                            Id = 63,
                            Name = "Black"
                        });
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.Icon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Icons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ArrowUp"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ArrowDown"
                        },
                        new
                        {
                            Id = 3,
                            Name = "ArrowLeft"
                        },
                        new
                        {
                            Id = 4,
                            Name = "ArrowRight"
                        },
                        new
                        {
                            Id = 5,
                            Name = "CircleArrowUp"
                        },
                        new
                        {
                            Id = 6,
                            Name = "CircleArrowDown"
                        },
                        new
                        {
                            Id = 7,
                            Name = "CircleArrowLeft"
                        },
                        new
                        {
                            Id = 8,
                            Name = "CircleArrowRight"
                        },
                        new
                        {
                            Id = 9,
                            Name = "ChevronUp"
                        },
                        new
                        {
                            Id = 10,
                            Name = "ChevronDown"
                        },
                        new
                        {
                            Id = 11,
                            Name = "ChevronLeft"
                        },
                        new
                        {
                            Id = 12,
                            Name = "ChevronRight"
                        },
                        new
                        {
                            Id = 13,
                            Name = "AngleUp"
                        },
                        new
                        {
                            Id = 14,
                            Name = "AngleDown"
                        },
                        new
                        {
                            Id = 15,
                            Name = "AngleLeft"
                        },
                        new
                        {
                            Id = 16,
                            Name = "AngleRight"
                        },
                        new
                        {
                            Id = 17,
                            Name = "AnglesUp"
                        },
                        new
                        {
                            Id = 18,
                            Name = "AnglesDown"
                        },
                        new
                        {
                            Id = 19,
                            Name = "AnglesLeft"
                        },
                        new
                        {
                            Id = 20,
                            Name = "AnglesRight"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Exclaimation"
                        },
                        new
                        {
                            Id = 22,
                            Name = "CircleExclaimation"
                        },
                        new
                        {
                            Id = 23,
                            Name = "TriangleExclaimation"
                        },
                        new
                        {
                            Id = 24,
                            Name = "XMark"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Ban"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Equals"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Bug"
                        },
                        new
                        {
                            Id = 28,
                            Name = "PlusSquare"
                        },
                        new
                        {
                            Id = 29,
                            Name = "CheckSquare"
                        },
                        new
                        {
                            Id = 30,
                            Name = "CaretSquareUp"
                        },
                        new
                        {
                            Id = 31,
                            Name = "CaretSquareDown"
                        },
                        new
                        {
                            Id = 32,
                            Name = "CaretSquareLeft"
                        },
                        new
                        {
                            Id = 33,
                            Name = "CaretSquareRight"
                        });
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.Issue", b =>
                {
                    b.Property<string>("IssueId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("AssigneeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IssueStatusId")
                        .HasColumnType("int");

                    b.Property<int>("IssueTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("ReporterId")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IssueId");

                    b.HasIndex("AssigneeId");

                    b.HasIndex("IssueStatusId");

                    b.HasIndex("IssueTypeId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ReporterId");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.IssueStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IssueStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Backlog"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ToDo"
                        },
                        new
                        {
                            Id = 3,
                            Name = "In Progress"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Done"
                        });
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.IssueType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("IconId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("IconId");

                    b.ToTable("IssueTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorId = 34,
                            IconId = 29,
                            Name = "Task"
                        },
                        new
                        {
                            Id = 2,
                            ColorId = 19,
                            IconId = 27,
                            Name = "Bug"
                        });
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.JoinTables.PermissionSchemeRolePermission", b =>
                {
                    b.Property<int>("PermissionSchemeId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("PermissionSchemeId", "RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("PermissionSchemeRolePermission");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.JoinTables.UserPermission", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastModifiedBy")
                        .HasColumnType("int");

                    b.HasKey("UserId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("UserPermission");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Create new projects.",
                            Name = "Create Project",
                            Type = "Global"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Delete existing projects.",
                            Name = "Delete Project",
                            Type = "Global"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Edit global permissions assigned to users.",
                            Name = "Edit User Permissions",
                            Type = "Global"
                        },
                        new
                        {
                            Id = 4,
                            Description = "View all projects in WhatBug. Users without this permission must be a member of a project to view it.",
                            Name = "View All Projects",
                            Type = "Global"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Create new issues within a project.",
                            Name = "Create Issue",
                            Type = "Project"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Edit existing issues within a project.",
                            Name = "Edit Issue",
                            Type = "Project"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Delete issues within a project.",
                            Name = "Delete Issue",
                            Type = "Project"
                        });
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.PermissionScheme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PermissionSchemes");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.Priorities.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IconId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("IconId");

                    b.ToTable("Priorities");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.PriorityScheme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PrioritySchemes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The default priority scheme used by all projects without any other scheme assigned.",
                            Name = "Default"
                        });
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrioritySchemeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrioritySchemeId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.ProjectRoleUser", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId", "RoleId", "UserId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectRoleUser");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PriorityPriorityScheme", b =>
                {
                    b.HasOne("WhatBug.Domain.Entities.Priorities.Priority", null)
                        .WithMany()
                        .HasForeignKey("PrioritiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhatBug.Domain.Entities.PriorityScheme", null)
                        .WithMany()
                        .HasForeignKey("PrioritySchemesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.Issue", b =>
                {
                    b.HasOne("WhatBug.Domain.Entities.User", "Assignee")
                        .WithMany("AssignedIssues")
                        .HasForeignKey("AssigneeId");

                    b.HasOne("WhatBug.Domain.Entities.IssueStatus", "IssueStatus")
                        .WithMany()
                        .HasForeignKey("IssueStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhatBug.Domain.Entities.IssueType", "IssueType")
                        .WithMany()
                        .HasForeignKey("IssueTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WhatBug.Domain.Entities.Priorities.Priority", "Priority")
                        .WithMany()
                        .HasForeignKey("PriorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhatBug.Domain.Entities.Project", "Project")
                        .WithMany("Issues")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhatBug.Domain.Entities.User", "Reporter")
                        .WithMany("ReportedIssues")
                        .HasForeignKey("ReporterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignee");

                    b.Navigation("IssueStatus");

                    b.Navigation("IssueType");

                    b.Navigation("Priority");

                    b.Navigation("Project");

                    b.Navigation("Reporter");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.IssueType", b =>
                {
                    b.HasOne("WhatBug.Domain.Entities.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhatBug.Domain.Entities.Icon", "Icon")
                        .WithMany()
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Icon");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.JoinTables.PermissionSchemeRolePermission", b =>
                {
                    b.HasOne("WhatBug.Domain.Entities.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhatBug.Domain.Entities.PermissionScheme", "PermissionScheme")
                        .WithMany("ProjectRolePermissions")
                        .HasForeignKey("PermissionSchemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhatBug.Domain.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("PermissionScheme");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.JoinTables.UserPermission", b =>
                {
                    b.HasOne("WhatBug.Domain.Entities.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhatBug.Domain.Entities.User", "User")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.Priorities.Priority", b =>
                {
                    b.HasOne("WhatBug.Domain.Entities.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhatBug.Domain.Entities.Icon", "Icon")
                        .WithMany()
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Icon");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.Project", b =>
                {
                    b.HasOne("WhatBug.Domain.Entities.PriorityScheme", "PriorityScheme")
                        .WithMany("Projects")
                        .HasForeignKey("PrioritySchemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PriorityScheme");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.ProjectRoleUser", b =>
                {
                    b.HasOne("WhatBug.Domain.Entities.Project", "Project")
                        .WithMany("RoleUsers")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhatBug.Domain.Entities.Role", "Role")
                        .WithMany("ProjectUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhatBug.Domain.Entities.User", "User")
                        .WithMany("ProjectRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.PermissionScheme", b =>
                {
                    b.Navigation("ProjectRolePermissions");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.PriorityScheme", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.Project", b =>
                {
                    b.Navigation("Issues");

                    b.Navigation("RoleUsers");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.Role", b =>
                {
                    b.Navigation("ProjectUsers");
                });

            modelBuilder.Entity("WhatBug.Domain.Entities.User", b =>
                {
                    b.Navigation("AssignedIssues");

                    b.Navigation("ProjectRoles");

                    b.Navigation("ReportedIssues");

                    b.Navigation("UserPermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
